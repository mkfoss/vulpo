<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>sort4init</title>

<!--(Meta)==========================================================-->

<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Originator content=ImportDoc>
<meta name=OriginalFile content="C:\Documentation\C Reference Guide Word Docs\mem4.doc">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1054>
<meta name=layout-width content=741>


<!--(Links)=========================================================-->

<link rel="stylesheet" href="mem4.css">



</head>

<!--(Body)==========================================================-->


<body lang=EN-US>

<h2>sort4init</h2>

<p class=Body
	style="margin-top: 0in;
			margin-right: 0in;
			margin-bottom: .0001pt;
			margin-left: 157.5pt;
			text-indent: -157.5pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 <span class=InlineFunctionDescTitle><span style="font-size: 9.0pt; font-family: Arial;">Usage:&nbsp;&nbsp;&nbsp; 
 </span></span>int sort4init(SORT4 *sort, CODE4 *code, int&nbsp;sortSize, 
 int&nbsp;otherSize) </p>

<p class=Body
	style="margin-top: 6.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 <span class=InlineFunctionDescTitle><span style="font-size: 9.0pt; font-family: Arial;">Description:&nbsp;&nbsp;&nbsp; 
 </span></span>Initialization is done to prepare for the sort. Specifically, 
 the initial comparison function is set to <b>memcmp</b>&nbsp;and some 
 initial memory is allocated. </p>

<p class=Body>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=InlineFunctionDescTitle><span 
 style="font-size: 9.0pt; font-family: Arial;">Parameters:</span></span></p>

<p class=Body>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 <span class=InlineCommentText><span style="font-size: 9.0pt; font-family: Arial;">sort</span></span>&nbsp;&nbsp; 
 A pointer to a <span class=InlineFunctionNames><span style="font-size: 10.0pt; font-family: Arial;">SORT4</span></span> 
 structure.</p>

<p class=Body>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 <span class=InlineCommentText><span style="font-size: 9.0pt; font-family: Arial;">code&nbsp;&nbsp;&nbsp; 
 </span></span>A pointer to a <span class=InlineFunctionNames><span style="font-size: 10.0pt; font-family: Arial;">CODE4</span></span> 
 structure. <span class=InlineFunctionNames><span style="font-size: 10.0pt; font-family: Arial;">CODE4.memSizeSortPool</span></span> 
 and <span class=InlineFunctionNames><span style="font-size: 10.0pt; font-family: Arial;">CODE4.memSizeSortBuffer</span></span> 
 specify default memory allocation for the sort. </p>

<p class=Body>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 <span class=InlineCommentText><span style="font-size: 9.0pt; font-family: Arial;">sortSize&nbsp;&nbsp;&nbsp; 
 </span></span>This is the size of each sort item passed to <span class=InlineFunctionNames><span 
 style="font-size: 10.0pt; font-family: Arial;">sort4put</span></span> 
 and the size of each sort item retrieved by <span class=InlineFunctionNames><span 
 style="font-size: 10.0pt; font-family: Arial;">sort4get</span></span>. 
 Generally this value is obtained by using the <b>sizeof</b> operator. 
 </p>

<p class=Body>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 <span class=InlineCommentText><span style="font-size: 9.0pt; font-family: Arial;">otherSize&nbsp;&nbsp;&nbsp; 
 </span></span>This is the size of the additional &quot;other&quot; information 
 for each sort item. This additional information is also passed to <span 
 class=InlineFunctionNames><span style="font-size: 10.0pt; font-family: Arial;">sort4put</span></span> 
 and retrieved by <span class=InlineFunctionNames><span style="font-size: 10.0pt; font-family: Arial;">sort4get</span></span>. 
 Generally this value is obtained by using the <b>sizeof</b> operator. 
 </p>

<p class=Body>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 <span class=InlineFunctionDescTitle><span style="font-size: 9.0pt; font-family: Arial;">Returns:</span></span></p>

<p class=Body>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 <span class=InlineCommentText><span style="font-size: 9.0pt; font-family: Arial;">r4success&nbsp;&nbsp;&nbsp; 
 </span></span>Success. </p>

<p class=Body>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 <span class=InlineCommentText><span style="font-size: 9.0pt; font-family: Arial;">&lt; 
 0&nbsp;&nbsp;&nbsp; </span></span>Error. </p>

<p class=Body>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 <span class=InlineFunctionDescTitle
		style="font-size: 9.0pt; font-family: Arial;">See Also:</span>&nbsp;&nbsp; 
 <span class=InlineFunctionNames
		style="font-size: 10.0pt; font-family: Arial;"><a href="sort4put.htm">sort4put</a></span>, 
 <span class=InlineFunctionNames
		style="font-size: 10.0pt; font-family: Arial;"><a href="sort4get.htm">sort4get</a></span></p>

<p class=SourceCode>/*ex129.c*/</p>

<p class=SourceCode>#include &quot;d4all.h&quot; </p>

<p class=SourceCode>extern unsigned _stklen = 10000 ;</p>

<p class=SourceCode>&nbsp;</p>

<p class=SourceCode>typedef struct myStructSt</p>

<p class=SourceCode>{</p>

<p class=SourceCode>&nbsp;&nbsp; char name[7] ;</p>

<p class=SourceCode>} MY_STRUCT ;</p>

<p class=SourceCode>&nbsp;</p>

<p class=SourceCode>int myStructCmp( S4CMP_PARM p1, S4CMP_PARM p2, size_t 
 len ) </p>

<p class=SourceCode>{</p>

<p class=SourceCode>&nbsp;&nbsp; return strcmp( ((MY_STRUCT *)p1)-&gt;name, 
 ((MY_STRUCT *)p2)-&gt;name ) ;</p>

<p class=SourceCode>}</p>

<p class=SourceCode>&nbsp;</p>

<p class=SourceCode>void main( void ) </p>

<p class=SourceCode>{</p>

<p class=SourceCode>&nbsp;&nbsp; CODE4 cb ;</p>

<p class=SourceCode>&nbsp;&nbsp; SORT4 sort ;</p>

<p class=SourceCode>&nbsp;&nbsp; MY_STRUCT st1, st2, st3, st4, *st ;</p>

<p class=SourceCode>&nbsp;&nbsp; long recNo ;</p>

<p class=SourceCode>&nbsp;&nbsp; char *notUsed ;</p>

<p class=SourceCode>&nbsp;</p>

<p class=SourceCode>&nbsp;&nbsp; code4init( &amp;cb ) ;</p>

<p class=SourceCode>&nbsp;&nbsp; sort4init( &amp;sort, &amp;cb, sizeof( 
 MY_STRUCT ), 0 ) ;</p>

<p class=SourceCode>&nbsp;&nbsp; sort4assignCmp( &amp;sort, myStructCmp 
 ) ;</p>

<p class=SourceCode>&nbsp;</p>

<p class=SourceCode>&nbsp;&nbsp; strcpy( st1.name, &quot;hello&quot; ) 
 ;</p>

<p class=SourceCode>&nbsp;&nbsp; strcpy( st2.name, &quot;this&quot; ) ;</p>

<p class=SourceCode>&nbsp;&nbsp; strcpy( st3.name, &quot;apples&quot; ) 
 ;</p>

<p class=SourceCode>&nbsp;&nbsp; strcpy( st4.name, &quot;face&quot; ) ;</p>

<p class=SourceCode>&nbsp;</p>

<p class=SourceCode>&nbsp;&nbsp; sort4put( &amp;sort, 1L, &amp;st1, NULL 
 ) ;</p>

<p class=SourceCode>&nbsp;&nbsp; sort4put( &amp;sort, 2L, &amp;st2, NULL 
 ) ;</p>

<p class=SourceCode>&nbsp;&nbsp; sort4put( &amp;sort, 3L, &amp;st3, NULL 
 ) ;</p>

<p class=SourceCode>&nbsp;&nbsp; sort4put( &amp;sort, 4L, &amp;st4, NULL 
 ) ;</p>

<p class=SourceCode>&nbsp;</p>

<p class=SourceCode>&nbsp;&nbsp; sort4getInit( &amp;sort ) ; </p>

<p class=SourceCode>&nbsp;&nbsp; while( sort4get( &amp;sort, &amp;recNo, 
 &amp;st, &amp;notUsed ) == 0 )</p>

<p class=SourceCode>&nbsp;&nbsp; {</p>

<p class=SourceCode>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf( &quot;Sorted 
 Item: %s\n&quot;, st-&gt;name ) ;</p>

<p class=SourceCode>&nbsp;&nbsp; }</p>

<p class=SourceCode>&nbsp;&nbsp; sort4free( &amp;sort ) ;</p>

<p class=SourceCode>&nbsp;&nbsp; code4initUndo( &amp;cb ) ;</p>

<p class=SourceCode>}</p>

</body>

</html>
